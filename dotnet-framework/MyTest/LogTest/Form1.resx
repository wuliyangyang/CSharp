<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="skinCode1.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAS0SURBVHhe7ds9UhwxEIZhrkbgKs5CRhX3ICThDsREnIAD
        kBH7BM7GaBctTc8rqaVRS7vsBo/tmumv1WO67F1+rv7+W5berq6usihTi/pKlMmhHhYtfXSmhHoQylqd
        7CIE1FuijEa5WrW95PlW1IdQ1qL7ItBwEmVaUX+JMhHVt6rpp+eoQf0IZUvObhGobhSapwX11iiXM3QR
        qH4rOic61L1/LM+PN1gzipy5BzpDo1zKr16EwFLjTc/cC52lUY50XQQaRKLMVnTOMaGZe6IzNcppl0VQ
        rh8/8JyIMjnUozc6V6Oc5LIIdM+LfNgtqHcK5QllvdD5GuWi7q8RRqMHrkE9c6gHoaw3mkOjXHDei/Dn
        aXmDninYI4N6eKM5JMoEJ70I9KB17pdn6Es4X0a9vNEcEdUHJ7sI9JAtHt65v0S5GtTTE80gYYYuHjt6
        uC3oDIkytaivFzpfwgxdPAZ6YP0wHuR5HudS/57oTIJZujibHlg+RLyur2kxa6mVWnNWsn8vdIa+Jun8
        rp4uzkSDS9YaQrWkpraVnq0F9Q1y9wLdZ1dPF2ehoSVrTdL7E2akUEfXPazmq5Trp+9Jsu5QTxdnoaGD
        0n1J9lt7XW4hs93N4d0H309bz1hW6qHva7p+l9n9krg5kh62BfX96WN5+MPZPu7hWhnPyixZXaNhZvdL
        4uYoetAW1Jc833F+NppVs2R0jUaZ4POerdCTnqEW9Ux5m/wNKiU0c2Cp0zWEcsHnPXuxBzq/FvVN6bEI
        3/18XnPIeXP3JF2XQtngx4tFa6gXfV4L6pv10v7/OF07+HxHcq3uR/HrGXTP6sdZCtUTykardw21DVrQ
        GS2od1HmA5Yi87l7qd7ym130PYsfZyhUn0L5CN8+1jaxor6tqL9N3T/n1CNXhy9G1Ze7V/crtObj2Sm4
        CEFLs5xUL33dQvatV/cWkntk/n7wv57vzzPk8l7kuSnJRQioaUT1pJSl+zky24r6plBeogy5fWnPbqXP
        JdlFkOiAWlv7Ur4W9c2hHoSyx4BmJeZFiOiwHOohUYZQtgX1zqEeKZSfhebLqV6ESB/WMojOpFB2E8MX
        nwLMFuVfjIaa+Hv8M8ndK4m9azQvwlb0AISy29neOXA2jz9htX6xGK1r9yw1mszUmrII9BCEsn3Y3jlw
        NiexYJnvll7VClTv5UwXwTYD5ZIyn6iidwwR1UdU72X4ItAD51CPHugsjXJrhX9dDD87gblPVOtl6CLQ
        w5ZQn63oHI1yB+ZPU5d/boJze1TvZdgi0INaUb8W1Dtll2n8AtWe7YdnOLtH9V6GLAI9pFaq0z1rUU8v
        pZ+oligfUb0X90WgB9SstbKvFfVxc/eKM+Rgny9U72X6ItTWBzpDKOei4YMvYc8vVO/FdRHo4bTW3Ay5
        t4Et6AyJMl6mLgJlIqofw/4T0lvx+d8o48VtEejBtJZMb3qGUWgWiTKepi7CbDT3KDSPRBlPZ7kINO9o
        NJdEGU8ui0APdgxo1hloNoky3i6LMAHNJlHG22URJqDZJMp4O9lFoHNPAT2LRJkRpi8C5X8z+juQKDOC
        yyJcMPrAa5Qb4bIIA9EHXqLMKJdFGIg++BJlxliW/0cTt4975mLRAAAAAElFTkSuQmCC
</value>
  </data>
</root>